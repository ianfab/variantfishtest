name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Code
    
    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch the full history for all branches and tags
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-bugbear flake8-simplify
    
    - name: Lint with flake8
      run: |
        # Run flake8 linting
        flake8 . --count --show-source --statistics
        
        # Show summary
        echo "✅ Linting completed successfully"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    name: Test Python ${{ matrix.python-version }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        
        # Install any runtime dependencies if they exist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests with pytest
      run: |
        # Run tests with coverage
        pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing

  integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            binary-name: fairy-stockfish-largeboard_x86-64
            binary-path: ./fairy-stockfish
            download-path: fairy-stockfish
          - os: windows-latest
            binary-name: fairy-stockfish-largeboard_x86-64.exe
            binary-path: ./fairy-stockfish.exe
            download-path: fairy-stockfish.exe
    name: Integration Test (${{ matrix.os }})
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Download Fairy-Stockfish
      run: |
        curl -L -o ${{ matrix.download-path }} https://github.com/fairy-stockfish/Fairy-Stockfish/releases/latest/download/${{ matrix.binary-name }}
      shell: bash
    
    - name: Make executable (Linux)
      if: runner.os == 'Linux'
      run: chmod +x ${{ matrix.download-path }}
    
    - name: Test UCI functionality
      run: |
        echo "quit" | ${{ matrix.binary-path }} uci
      shell: bash
    
    - name: Run integration test
      run: |
        python variantfishtest.py ${{ matrix.binary-path }} ${{ matrix.binary-path }} -n 4 -t 100 -i 30 -T 2 --verbosity 1
        echo "✅ Integration test completed successfully!"
      shell: bash
